"""Renaming PredictionTable to Prediction

Revision ID: 2ef75c502903
Revises: 84019eb733d6
Create Date: 2025-09-15 16:12:00.744850

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "2ef75c502903"
down_revision: Union[str, Sequence[str], None] = "f0cf73e037e0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "prediction",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("main_prediction", sa.Text(), nullable=False),
        sa.Column("extended_prediction", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.drop_table("prediction_table")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "prediction_table",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("main_prediction", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "extended_prediction", sa.TEXT(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("prediction_table_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("prediction_table_pkey")),
        sa.UniqueConstraint(
            "id",
            name=op.f("prediction_table_id_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.drop_table("prediction")
    # ### end Alembic commands ###
